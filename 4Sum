class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        if(nums.size() < 3){
            return res;
        }
        sort(nums.begin(), nums.end()); 
        for(int a=0;a<nums.size()-3;a++){
            if(a==0 || nums[a]!=nums[a-1]){
                int mtar= target-nums[a];
                for(int k=a+1;k<nums.size()-2;k++){
                    if(k==a+1 || nums[k]!=nums[k-1]){

                        int target= mtar-nums[k];
                        int l=k+1, h=nums.size()-1;

                        while(l<h){

                        vector<int> arr;
                            if(nums[l]+nums[h] == target){
                                arr.push_back(nums[a]);
                                arr.push_back(nums[k]);
                                arr.push_back(nums[l]);
                                arr.push_back(nums[h]);
                                
                                res.push_back(arr);
                                while(l<h && nums[l]==nums[l+1]){
                                    l++;
                                }
                                while(l<h && nums[h]==nums[h-1]){
                                    h--;
                                }
                                l++;
                                h--;
                            }
                            else if(nums[l]+nums[h] > target){
                                h--;
                            }
                            else{
                                l++;
                            }
                        }
                    }
                }
            }
        }
        return res;
    }
};
